import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from scipy.interpolate import griddata
from mpl_toolkits.mplot3d import Axes3D

# Example DataFrame with three columns: x, y, and z
data = {
    'x': [0, 1, 2, 0, 1, 2, 0, 1, 2],
    'y': [0, 0, 0, 1, 1, 1, 2, 2, 2],
    'z': [0, 1, 4, 1, 2, 3, 4, 3, 2]
}
df = pd.DataFrame(data)

# Extract the coordinate arrays
x = df['x'].values
y = df['y'].values
z = df['z'].values

# Create a regular grid for interpolation
xi = np.linspace(x.min(), x.max(), 100)
yi = np.linspace(y.min(), y.max(), 100)
xi, yi = np.meshgrid(xi, yi)

# Interpolate z values using griddata
zi = griddata((x, y), z, (xi, yi), method='cubic')

# Create a 3D plot
fig = plt.figure(figsize=(10, 7))
ax = fig.add_subplot(111, projection='3d')

# Plot the surface
surf = ax.plot_surface(xi, yi, zi, cmap='viridis', edgecolor='none')

# Scatter original data points
ax.scatter(x, y, z, color='red', s=50, edgecolor='k', label='Data Points')

# Labels and title
ax.set_xlabel('X')
ax.set_ylabel('Y')
ax.set_zlabel('Z')
ax.set_title('3D Interpolated Surface')

# Color bar
fig.colorbar(surf, ax=ax, shrink=0.5, aspect=10, label='Interpolated Z')

# Show the plot
plt.legend()
plt.show()
