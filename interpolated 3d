import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
from matplotlib import colors

# Generate sample data
X = np.linspace(-5, 5, 50)
Y = np.linspace(-5, 5, 50)
X, Y = np.meshgrid(X, Y)
Z = np.sin(np.sqrt(X**2 + Y**2))  # Simple function for Z values

# Define 4 color levels (discrete)
levels = np.linspace(Z.min(), Z.max(), 5)  # 4 colors, 5 levels

# Create a colormap with 4 distinct colors
cmap = plt.get_cmap('viridis', 4)  # You can choose a different colormap, like 'coolwarm'

# Normalize the Z values to match the levels
norm = colors.BoundaryNorm(boundaries=levels, ncolors=4)

# Create figure and plot
fig = plt.figure(figsize=(10, 7))
ax = fig.add_subplot(111, projection='3d')

# Plot surface with distinct colors
surf = ax.plot_surface(X, Y, Z, cmap=cmap, norm=norm, edgecolor='none')

# Add color bar with distinct intervals
cbar = fig.colorbar(surf, ticks=levels)
cbar.set_label('Z values')

# Set labels
ax.set_xlabel('X-axis')
ax.set_ylabel('Y-axis')
ax.set_zlabel('Z-axis')
ax.set_title('3D Surface with 4 Colors')

# Show plot
plt.show()
